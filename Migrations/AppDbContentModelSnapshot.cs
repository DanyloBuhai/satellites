// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using satellites.Data;

#nullable disable

namespace satellites.Migrations
{
    [DbContext(typeof(AppDbContent))]
    partial class AppDbContentModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("satellites.Data.Models.Planets", b =>
                {
                    b.Property<int>("planet_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("planet_id"));

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("planet_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("planet_id");

                    b.ToTable("Planet");
                });

            modelBuilder.Entity("satellites.Data.Models.Satellites", b =>
                {
                    b.Property<int>("satellite_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("satellite_id"));

                    b.Property<bool>("atmosphere")
                        .HasColumnType("bit");

                    b.Property<double>("diameter")
                        .HasColumnType("float");

                    b.Property<string>("discovery_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("longnote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("planet_id1")
                        .HasColumnType("int");

                    b.Property<string>("satellite_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("turnover_period")
                        .HasColumnType("float");

                    b.HasKey("satellite_id");

                    b.HasIndex("planet_id1");

                    b.ToTable("Satelite");
                });

            modelBuilder.Entity("satellites.Data.Models.Satellites", b =>
                {
                    b.HasOne("satellites.Data.Models.Planets", "planet_id")
                        .WithMany("satellit")
                        .HasForeignKey("planet_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("planet_id");
                });

            modelBuilder.Entity("satellites.Data.Models.Planets", b =>
                {
                    b.Navigation("satellit");
                });
#pragma warning restore 612, 618
        }
    }
}
